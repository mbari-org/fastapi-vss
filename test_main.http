# Test FastAPI endpoints

### Root endpoint
GET http://localhost:8000/
Accept: application/json


> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Expected response status to be 200");
    });
%}
###

### Health check
GET http://localhost:8000/health
Accept: application/json

> {%
    client.test("Health endpoint returns expected JSON", function() {
        client.assert(response.status === 200, "Expected response status to be 200");
        const body = response.body;
        client.assert(body.status === "ok", "Expected status to be 'ok'");
        client.assert(typeof body.version === "string", "Expected version to be a string");
    });
%}###

### GPU memory
GET http://localhost:8000/gpu-memory
Accept: application/json

###

### List projects
GET http://localhost:8000/projects
Accept: application/json

> {%
    client.test("Projects endpoint returns testproject", function() {
        client.assert(response.status === 200, "Expected response status to be 200");
        const body = response.body;
        client.assert(Array.isArray(body.projects), "Expected projects to be an array");
        client.assert(body.projects.includes("testproject"), "Expected 'testproject' in projects list");
    });
%}
###

### Get database IDs for a project
GET http://localhost:8000/ids/testproject
Accept: application/json

###

### KNN prediction
POST http://localhost:8000/knn/3/testproject
Accept: application/json
Content-Type: multipart/form-data; boundary=boundary

--boundary
Content-Disposition: form-data; name="files"; filename="atolla1.png"
Content-Type: image/png

< tests/images/atolla/atolla1.png
--boundary--

> {%
    client.test("KNN prediction endpoint returns valid response", function() {
        client.assert(response.status === 200, "Expected response status to be 200");
        const body = response.body;
        client.assert(body.job_id || body.error, "Expected either a job ID or an error message");
    });
%}

###

### Get job result (replace job_id and project)
#GET http://localhost:8000/predict/job/your_job_id/your_project_name
#Accept: application/json